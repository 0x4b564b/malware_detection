from src.data_fetcher import fetch_cve_data, fetch_exploit_data, fetch_virustotal_data, fetch_network_data, fetch_apk_data
from src.feature_engineering import create_feature_set
from src.model_trainer import train_model
from src.predictor import predict_vulnerability
from src.logger import logger

if __name__ == '__main__':
    logger.info("Starting Malware Detection Project")

    # Fetch data
    cve_data = fetch_cve_data()
    exploit_data = fetch_exploit_data()
    vt_data = fetch_virustotal_data()
    network_data = fetch_network_data()
    apk_data = fetch_apk_data()

    # Create features
    features_df = create_feature_set(cve_data, exploit_data, vt_data, network_data, apk_data)

    # Train model
    model = train_model(features_df)

    # Predict on a new example (using first entry in cve_data for illustration)
    if cve_data:
        first_cve = next(iter(cve_data.values()))
        prediction = predict_vulnerability(model, first_cve, exploit_data.get('CVE-2024-1234', {}), vt_data.get('hash_1', {}), network_data.get('192.168.1.1', {}), apk_data.get('apk_1', {}))

        logger.info(f"Prediction for first CVE: {'Vulnerable' if prediction == 1 else 'Not Vulnerable'}")
    else:
        logger.warning("No CVE data available for prediction")
