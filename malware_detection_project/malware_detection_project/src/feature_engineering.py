import pandas as pd
from .logger import logger

def create_feature_set(cve_data, exploit_data, vt_data, network_data, apk_data):
    logger.info("Creating feature set from the raw data")
    records = []

    for cve_id, cve_details in cve_data.items():
        vt_record = vt_data.get('hash_1', {})
        exploit_record = exploit_data.get(cve_id, {})
        network_record = network_data.get('192.168.1.1', {})
        apk_record = apk_data.get('apk_1', {})

        record = {
            'cve_score': cve_details.get('score', 0),
            'exploitability': cve_details.get('exploitability', 0),
            'exploit_available': int(exploit_record.get('exploit_available', False)),
            'malicious': vt_record.get('malicious', 0),
            'harmless': vt_record.get('harmless', 0),
            'suspicious': vt_record.get('suspicious', 0),
            'open_ports': network_record.get('open_ports', 0),
            'vulnerable_services': network_record.get('vulnerable_services', 0),
            'traffic_pattern_anomalous': 1 if network_record.get('traffic_pattern') == 'anomalous' else 0,
            'permissions': apk_record.get('permissions', 0),
            'malicious_activity': apk_record.get('malicious_activity', 0),
            'obfuscation_level': apk_record.get('obfuscation_level', 0),
            'is_vulnerable': 1 if cve_details.get('score', 0) > 7 else 0
        }
        records.append(record)

    df = pd.DataFrame(records)
    logger.info(f"Feature set created with {df.shape[0]} records")
    return df
